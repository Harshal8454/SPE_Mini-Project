pipeline {
    agent any

    environment {
        DOCKER_IMAGE_NAME = 'calculator'
        GITHUB_REPO_URL = 'https://github.com/Harshal8454/SPE_Mini-Project'
        OPTION = 1
        NUMBER = 2
        EXP = 3
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: "${GITHUB_REPO_URL}"]]])
                }
            }
        }

        stage('Run Main Application') {
            steps {
                script {
                    sh """
                        ls -l  # Debugging workspace
                        cd SPE_Mini-Project
                        echo '${OPTION}\n${NUMBER}\n${EXP}' | python3 cal.py
                    """
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh """
                        ls -l  # Debugging workspace
                        cd SPE_Mini-Project
                        python3 test.py
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE_NAME}", "-f SPE_Mini-Project/Dockerfile SPE_Mini-Project")
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script {
                    docker.withRegistry('', 'DockerHubCred') {
                        sh 'docker tag calculator harshal8454/calculator:latest'
                        sh 'docker push harshal8454/calculator'
                    }
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                script {
                    ansiblePlaybook(
                        playbook: 'SPE_Mini-Project/Deploy.yml',
                        inventory: 'SPE_Mini-Project/Inventory'
                    )
                }
            }
        }
    }
}
