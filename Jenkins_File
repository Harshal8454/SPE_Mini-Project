pipeline {
    agent any

    environment {
        DOCKER_IMAGE_NAME = 'calculator'
        GITHUB_REPO_URL = 'https://github.com/Harshal8454/SPE_Mini-Project.git'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    checkout scm
                }
            }
        }

        stage('Run Main Application') {
            steps {
                script {
                    def OPTION = 1
                    def NUMBER = 2
                    def EXP = 3
                    sh """
                        ls -l ${WORKSPACE}  # Debugging workspace
                        echo '${OPTION}\n${NUMBER}\n${EXP}' | python3 ${WORKSPACE}/cal.py
                    """
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh """
                        ls -l ${WORKSPACE}  # Debugging workspace
                        python3 ${WORKSPACE}/test.py
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE_NAME} -f ${WORKSPACE}/Dockerfile ${WORKSPACE}"
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script {
                    docker.withRegistry('', 'DockerHubCred') {  // Uses the correct default registry
                        sh """
                            docker tag ${DOCKER_IMAGE_NAME} harshal8454/${DOCKER_IMAGE_NAME}:latest
                            docker push harshal8454/${DOCKER_IMAGE_NAME}:latest
                        """
                    }
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                script {
                    ansiblePlaybook(
                        playbook: "${WORKSPACE}/Deploy.yml",
                        inventory: "${WORKSPACE}/Inventory"
                    )
                }
            }
        }
    }
}
